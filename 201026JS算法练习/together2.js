// 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
// 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。
// 示例:
// 给定 nums = [2, 7, 11, 15], target = 9
// 因为 nums[0] + nums[1] = 2 + 7 = 9
// 所以返回 [0, 1]
// 来源：力扣（LeetCode）
// 链接：https://leetcode-cn.com/problems/two-sum
// 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//第1版
// 执行用时：192 ms, 在所有 JavaScript 提交中击败了19.31%的用户
// 内存消耗：39 MB, 在所有 JavaScript 提交中击败了29.70%的用户
var twoSum = function (nums, target) {
  for (let i = 0; i < nums.length; i++) {
    for (let j = i + 1; j <= nums.length; j++) {
      if (nums[i] + nums[j] === target) {
        return [i, j];
      }
    }
  }
};
twoSum([2, 7, 11, 15], 9);

//第2版 垃圾
// 执行用时：408 ms, 在所有 JavaScript 提交中击败了5.07%的用户
// 内存消耗：38.8 MB, 在所有 JavaScript 提交中击败了36.92%的用户
var twoSum = function (nums, target) {
  for (let i = 0; i < nums.length; i++) {
    for (let j = i + 1; j <= nums.length; j++) {
      if (nums[i] < 0) {
        if (nums[j] > target) {
          if (nums[i] + nums[j] === target) {
            return [i, j];
          }
        }
      } else if (nums[i] > 0 && nums[i] < target) {
        if (nums[j] > 0 && nums[j] < target) {
          if (nums[i] + nums[j] === target) {
            return [i, j];
          }
        }
      } else if (nums[i] > target) {
        if (nums[j] < 0) {
          if (nums[i] + nums[j] === target) {
            return [i, j];
          }
        }
      } else {
        if (nums[i] === 0 && nums[j] === target) {
          return [i, j];
        } else if (nums[j] === 0) {
          return [i, j];
        }
      }
    }
  }
};
// twoSum([5, 75, 25], 100);
// twoSum([3, 2, 95, 4, -3], 92);
twoSum(
  [
    572,
    815,
    387,
    418,
    434,
    530,
    376,
    190,
    196,
    74,
    830,
    561,
    973,
    771,
    640,
    37,
    539,
    369,
    327,
    51,
    623,
    575,
    988,
    44,
    659,
    48,
    22,
    776,
    487,
    873,
    486,
    169,
    499,
    82,
    128,
    31,
    386,
    691,
    553,
    848,
    968,
    874,
    692,
    404,
    463,
    285,
    745,
    631,
    304,
    271,
    40,
    921,
    733,
    56,
    883,
    517,
    99,
    580,
    55,
    81,
    232,
    971,
    561,
    683,
    806,
    994,
    823,
    219,
    315,
    564,
    997,
    976,
    158,
    208,
    851,
    206,
    101,
    989,
    542,
    985,
    940,
    116,
    153,
    47,
    806,
    944,
    337,
    903,
    712,
    138,
    236,
    777,
    630,
    912,
    22,
    140,
    525,
    270,
    997,
    763,
    812,
    597,
    806,
    423,
    869,
    926,
    344,
    494,
    858,
    519,
    389,
    627,
    517,
    964,
    74,
    432,
    730,
    843,
    673,
    985,
    819,
    397,
    607,
    34,
    948,
    648,
    43,
    212,
    950,
    235,
    995,
    76,
    439,
    614,
    203,
    313,
    180,
    760,
    210,
    813,
    920,
    229,
    615,
    730,
    359,
    863,
    678,
    43,
    293,
    978,
    305,
    106,
    797,
    769,
    3,
    700,
    945,
    135,
    430,
    965,
    762,
    479,
    152,
    121,
    935,
    809,
    101,
    271,
    428,
    608,
    8,
    983,
    758,
    662,
    755,
    190,
    632,
    792,
    789,
    174,
    869,
    622,
    885,
    626,
    310,
    128,
    233,
    82,
    223,
    339,
    771,
    741,
    227,
    131,
    85,
    51,
    361,
    343,
    641,
    568,
    922,
    145,
    256,
    177,
    329,
    959,
    991,
    293,
    850,
    858,
    76,
    291,
    134,
    254,
    956,
    971,
    718,
    391,
    336,
    899,
    206,
    642,
    254,
    851,
    274,
    239,
    538,
    418,
    21,
    232,
    706,
    275,
    615,
    568,
    714,
    234,
    567,
    994,
    368,
    54,
    744,
    498,
    380,
    594,
    415,
    286,
    260,
    582,
    522,
    795,
    261,
    437,
    292,
    887,
    405,
    293,
    946,
    678,
    686,
    682,
    501,
    238,
    245,
    380,
    218,
    591,
    722,
    519,
    770,
    359,
    340,
    215,
    151,
    368,
    356,
    795,
    91,
    250,
    413,
    970,
    37,
    941,
    356,
    648,
    594,
    513,
    484,
    364,
    484,
    909,
    292,
    501,
    59,
    982,
    686,
    827,
    461,
    60,
    557,
    178,
    952,
    218,
    634,
    785,
    251,
    290,
    156,
    300,
    711,
    322,
    570,
    820,
    191,
    755,
    429,
    950,
    18,
    917,
    905,
    905,
    126,
    790,
    638,
    94,
    857,
    235,
    889,
    611,
    605,
    203,
    859,
    749,
    874,
    530,
    727,
    764,
    197,
    537,
    951,
    919,
    24,
    341,
    334,
    505,
    796,
    619,
    492,
    295,
    380,
    128,
    533,
    600,
    160,
    51,
    249,
    5,
    837,
    905,
    747,
    505,
    82,
    158,
    687,
    507,
    339,
    575,
    206,
    28,
    29,
    91,
    459,
    118,
    284,
    995,
    544,
    3,
    154,
    89,
    840,
    364,
    682,
    700,
    143,
    173,
    216,
    290,
    733,
    525,
    399,
    574,
    693,
    500,
    189,
    590,
    529,
    972,
    378,
    299,
    461,
    866,
    326,
    43,
    711,
    460,
    426,
    947,
    391,
    536,
    26,
    579,
    304,
    852,
    158,
    621,
    683,
    901,
    237,
    22,
    225,
    59,
    52,
    798,
    262,
    754,
    649,
    504,
    861,
    472,
    480,
    570,
    347,
    891,
    956,
    347,
    31,
    784,
    581,
    668,
    127,
    628,
    962,
    698,
    191,
    313,
    714,
    893,
  ],
  101
);

//第3版 一个for
// 执行用时：128 ms, 在所有 JavaScript 提交中击败了51.32%的用户
//内存消耗：39.7 MB, 在所有 JavaScript 提交中击败了10.02%的用户
var twoSum = function (nums, target) {
  let distance = [];
  let half = [];
  for (let i = 0; i < nums.length; i++) {
    if (nums[i] === target / 2) {
      distance.push(target - nums[i]);
      half.push(i);
      if (half.length === 2) {
        return half;
      }
    }
    if (nums[i] !== target / 2) {
      distance.push(target - nums[i]);
      if (distance.indexOf(nums[i]) !== -1) {
        return [distance.indexOf(nums[i]), i];
      }
    }
  }
};
// twoSum([2, 7, 11, 15], 9);
twoSum(
  [
    572,
    815,
    387,
    418,
    434,
    530,
    376,
    190,
    196,
    74,
    830,
    561,
    973,
    771,
    640,
    37,
    539,
    369,
    327,
    51,
    623,
    575,
    988,
    44,
    659,
    48,
    22,
    776,
    487,
    873,
    486,
    169,
    499,
    82,
    128,
    31,
    386,
    691,
    553,
    848,
    968,
    874,
    692,
    404,
    463,
    285,
    745,
    631,
    304,
    271,
    40,
    921,
    733,
    56,
    883,
    517,
    99,
    580,
    55,
    81,
    232,
    971,
    561,
    683,
    806,
    994,
    823,
    219,
    315,
    564,
    997,
    976,
    158,
    208,
    851,
    206,
    101,
    989,
    542,
    985,
    940,
    116,
    153,
    47,
    806,
    944,
    337,
    903,
    712,
    138,
    236,
    777,
    630,
    912,
    22,
    140,
    525,
    270,
    997,
    763,
    812,
    597,
    806,
    423,
    869,
    926,
    344,
    494,
    858,
    519,
    389,
    627,
    517,
    964,
    74,
    432,
    730,
    843,
    673,
    985,
    819,
    397,
    607,
    34,
    948,
    648,
    43,
    212,
    950,
    235,
    995,
    76,
    439,
    614,
    203,
    313,
    180,
    760,
    210,
    813,
    920,
    229,
    615,
    730,
    359,
    863,
    678,
    43,
    293,
    978,
    305,
    106,
    797,
    769,
    3,
    700,
    945,
    135,
    430,
    965,
    762,
    479,
    152,
    121,
    935,
    809,
    101,
    271,
    428,
    608,
    8,
    983,
    758,
    662,
    755,
    190,
    632,
    792,
    789,
    174,
    869,
    622,
    885,
    626,
    310,
    128,
    233,
    82,
    223,
    339,
    771,
    741,
    227,
    131,
    85,
    51,
    361,
    343,
    641,
    568,
    922,
    145,
    256,
    177,
    329,
    959,
    991,
    293,
    850,
    858,
    76,
    291,
    134,
    254,
    956,
    971,
    718,
    391,
    336,
    899,
    206,
    642,
    254,
    851,
    274,
    239,
    538,
    418,
    21,
    232,
    706,
    275,
    615,
    568,
    714,
    234,
    567,
    994,
    368,
    54,
    744,
    498,
    380,
    594,
    415,
    286,
    260,
    582,
    522,
    795,
    261,
    437,
    292,
    887,
    405,
    293,
    946,
    678,
    686,
    682,
    501,
    238,
    245,
    380,
    218,
    591,
    722,
    519,
    770,
    359,
    340,
    215,
    151,
    368,
    356,
    795,
    91,
    250,
    413,
    970,
    37,
    941,
    356,
    648,
    594,
    513,
    484,
    364,
    484,
    909,
    292,
    501,
    59,
    982,
    686,
    827,
    461,
    60,
    557,
    178,
    952,
    218,
    634,
    785,
    251,
    290,
    156,
    300,
    711,
    322,
    570,
    820,
    191,
    755,
    429,
    950,
    18,
    917,
    905,
    905,
    126,
    790,
    638,
    94,
    857,
    235,
    889,
    611,
    605,
    203,
    859,
    749,
    874,
    530,
    727,
    764,
    197,
    537,
    951,
    919,
    24,
    341,
    334,
    505,
    796,
    619,
    492,
    295,
    380,
    128,
    533,
    600,
    160,
    51,
    249,
    5,
    837,
    905,
    747,
    505,
    82,
    158,
    687,
    507,
    339,
    575,
    206,
    28,
    29,
    91,
    459,
    118,
    284,
    995,
    544,
    3,
    154,
    89,
    840,
    364,
    682,
    700,
    143,
    173,
    216,
    290,
    733,
    525,
    399,
    574,
    693,
    500,
    189,
    590,
    529,
    972,
    378,
    299,
    461,
    866,
    326,
    43,
    711,
    460,
    426,
    947,
    391,
    536,
    26,
    579,
    304,
    852,
    158,
    621,
    683,
    901,
    237,
    22,
    225,
    59,
    52,
    798,
    262,
    754,
    649,
    504,
    861,
    472,
    480,
    570,
    347,
    891,
    956,
    347,
    31,
    784,
    581,
    668,
    127,
    628,
    962,
    698,
    191,
    313,
    714,
    893,
  ],
  101
);
twoSum([3, 3], 6);

//第4版 降低内存失败
// 执行用时：128 ms, 在所有 JavaScript 提交中击败了51.32%的用户
//内存消耗：39.7 MB, 在所有 JavaScript 提交中击败了10.02%的用户
var twoSum = function (nums, target) {
  let distance = [];
  let j = 0;
  for (let i = 0; i < nums.length; i++) {
    if (nums[i] === target / 2) {
      distance.push(target - nums[i]);
      j++;
      if (j === 2) {
        return [distance.indexOf(target / 2), i];
      }
    }
    if (nums[i] !== target / 2) {
      distance.push(target - nums[i]);
      if (distance.indexOf(nums[i]) !== -1) {
        return [distance.indexOf(nums[i]), i];
      }
    }
  }
};
// twoSum([2, 7, 11, 15], 9);
twoSum(
  [
    572,
    815,
    387,
    418,
    434,
    530,
    376,
    190,
    196,
    74,
    830,
    561,
    973,
    771,
    640,
    37,
    539,
    369,
    327,
    51,
    623,
    575,
    988,
    44,
    659,
    48,
    22,
    776,
    487,
    873,
    486,
    169,
    499,
    82,
    128,
    31,
    386,
    691,
    553,
    848,
    968,
    874,
    692,
    404,
    463,
    285,
    745,
    631,
    304,
    271,
    40,
    921,
    733,
    56,
    883,
    517,
    99,
    580,
    55,
    81,
    232,
    971,
    561,
    683,
    806,
    994,
    823,
    219,
    315,
    564,
    997,
    976,
    158,
    208,
    851,
    206,
    101,
    989,
    542,
    985,
    940,
    116,
    153,
    47,
    806,
    944,
    337,
    903,
    712,
    138,
    236,
    777,
    630,
    912,
    22,
    140,
    525,
    270,
    997,
    763,
    812,
    597,
    806,
    423,
    869,
    926,
    344,
    494,
    858,
    519,
    389,
    627,
    517,
    964,
    74,
    432,
    730,
    843,
    673,
    985,
    819,
    397,
    607,
    34,
    948,
    648,
    43,
    212,
    950,
    235,
    995,
    76,
    439,
    614,
    203,
    313,
    180,
    760,
    210,
    813,
    920,
    229,
    615,
    730,
    359,
    863,
    678,
    43,
    293,
    978,
    305,
    106,
    797,
    769,
    3,
    700,
    945,
    135,
    430,
    965,
    762,
    479,
    152,
    121,
    935,
    809,
    101,
    271,
    428,
    608,
    8,
    983,
    758,
    662,
    755,
    190,
    632,
    792,
    789,
    174,
    869,
    622,
    885,
    626,
    310,
    128,
    233,
    82,
    223,
    339,
    771,
    741,
    227,
    131,
    85,
    51,
    361,
    343,
    641,
    568,
    922,
    145,
    256,
    177,
    329,
    959,
    991,
    293,
    850,
    858,
    76,
    291,
    134,
    254,
    956,
    971,
    718,
    391,
    336,
    899,
    206,
    642,
    254,
    851,
    274,
    239,
    538,
    418,
    21,
    232,
    706,
    275,
    615,
    568,
    714,
    234,
    567,
    994,
    368,
    54,
    744,
    498,
    380,
    594,
    415,
    286,
    260,
    582,
    522,
    795,
    261,
    437,
    292,
    887,
    405,
    293,
    946,
    678,
    686,
    682,
    501,
    238,
    245,
    380,
    218,
    591,
    722,
    519,
    770,
    359,
    340,
    215,
    151,
    368,
    356,
    795,
    91,
    250,
    413,
    970,
    37,
    941,
    356,
    648,
    594,
    513,
    484,
    364,
    484,
    909,
    292,
    501,
    59,
    982,
    686,
    827,
    461,
    60,
    557,
    178,
    952,
    218,
    634,
    785,
    251,
    290,
    156,
    300,
    711,
    322,
    570,
    820,
    191,
    755,
    429,
    950,
    18,
    917,
    905,
    905,
    126,
    790,
    638,
    94,
    857,
    235,
    889,
    611,
    605,
    203,
    859,
    749,
    874,
    530,
    727,
    764,
    197,
    537,
    951,
    919,
    24,
    341,
    334,
    505,
    796,
    619,
    492,
    295,
    380,
    128,
    533,
    600,
    160,
    51,
    249,
    5,
    837,
    905,
    747,
    505,
    82,
    158,
    687,
    507,
    339,
    575,
    206,
    28,
    29,
    91,
    459,
    118,
    284,
    995,
    544,
    3,
    154,
    89,
    840,
    364,
    682,
    700,
    143,
    173,
    216,
    290,
    733,
    525,
    399,
    574,
    693,
    500,
    189,
    590,
    529,
    972,
    378,
    299,
    461,
    866,
    326,
    43,
    711,
    460,
    426,
    947,
    391,
    536,
    26,
    579,
    304,
    852,
    158,
    621,
    683,
    901,
    237,
    22,
    225,
    59,
    52,
    798,
    262,
    754,
    649,
    504,
    861,
    472,
    480,
    570,
    347,
    891,
    956,
    347,
    31,
    784,
    581,
    668,
    127,
    628,
    962,
    698,
    191,
    313,
    714,
    893,
  ],
  101
);
twoSum([3, 3], 6);

//第5版 降低内存失败
//执行用时：128 ms, 在所有 JavaScript 提交中击败了51.32%的用户
//内存消耗：39.3 MB, 在所有 JavaScript 提交中击败了17.79%的用户
var twoSum = function (nums, target) {
  let distance = [];
  for (let i = 0; i < nums.length; i++) {
    distance.push(target - nums[i]);
    for (let j = 0; j < distance.length; j++) {
      if (nums[i] === target / 2) {
        if (distance[j] === target / 2 && j < i) {
          return [j, i];
        }
      } else if (nums[i] === distance[j]) {
        return [j, i];
      }
    }
  }
};
// twoSum([2, 7, 11, 15], 9);
twoSum(
  [
    572,
    815,
    387,
    418,
    434,
    530,
    376,
    190,
    196,
    74,
    830,
    561,
    973,
    771,
    640,
    37,
    539,
    369,
    327,
    51,
    623,
    575,
    988,
    44,
    659,
    48,
    22,
    776,
    487,
    873,
    486,
    169,
    499,
    82,
    128,
    31,
    386,
    691,
    553,
    848,
    968,
    874,
    692,
    404,
    463,
    285,
    745,
    631,
    304,
    271,
    40,
    921,
    733,
    56,
    883,
    517,
    99,
    580,
    55,
    81,
    232,
    971,
    561,
    683,
    806,
    994,
    823,
    219,
    315,
    564,
    997,
    976,
    158,
    208,
    851,
    206,
    101,
    989,
    542,
    985,
    940,
    116,
    153,
    47,
    806,
    944,
    337,
    903,
    712,
    138,
    236,
    777,
    630,
    912,
    22,
    140,
    525,
    270,
    997,
    763,
    812,
    597,
    806,
    423,
    869,
    926,
    344,
    494,
    858,
    519,
    389,
    627,
    517,
    964,
    74,
    432,
    730,
    843,
    673,
    985,
    819,
    397,
    607,
    34,
    948,
    648,
    43,
    212,
    950,
    235,
    995,
    76,
    439,
    614,
    203,
    313,
    180,
    760,
    210,
    813,
    920,
    229,
    615,
    730,
    359,
    863,
    678,
    43,
    293,
    978,
    305,
    106,
    797,
    769,
    3,
    700,
    945,
    135,
    430,
    965,
    762,
    479,
    152,
    121,
    935,
    809,
    101,
    271,
    428,
    608,
    8,
    983,
    758,
    662,
    755,
    190,
    632,
    792,
    789,
    174,
    869,
    622,
    885,
    626,
    310,
    128,
    233,
    82,
    223,
    339,
    771,
    741,
    227,
    131,
    85,
    51,
    361,
    343,
    641,
    568,
    922,
    145,
    256,
    177,
    329,
    959,
    991,
    293,
    850,
    858,
    76,
    291,
    134,
    254,
    956,
    971,
    718,
    391,
    336,
    899,
    206,
    642,
    254,
    851,
    274,
    239,
    538,
    418,
    21,
    232,
    706,
    275,
    615,
    568,
    714,
    234,
    567,
    994,
    368,
    54,
    744,
    498,
    380,
    594,
    415,
    286,
    260,
    582,
    522,
    795,
    261,
    437,
    292,
    887,
    405,
    293,
    946,
    678,
    686,
    682,
    501,
    238,
    245,
    380,
    218,
    591,
    722,
    519,
    770,
    359,
    340,
    215,
    151,
    368,
    356,
    795,
    91,
    250,
    413,
    970,
    37,
    941,
    356,
    648,
    594,
    513,
    484,
    364,
    484,
    909,
    292,
    501,
    59,
    982,
    686,
    827,
    461,
    60,
    557,
    178,
    952,
    218,
    634,
    785,
    251,
    290,
    156,
    300,
    711,
    322,
    570,
    820,
    191,
    755,
    429,
    950,
    18,
    917,
    905,
    905,
    126,
    790,
    638,
    94,
    857,
    235,
    889,
    611,
    605,
    203,
    859,
    749,
    874,
    530,
    727,
    764,
    197,
    537,
    951,
    919,
    24,
    341,
    334,
    505,
    796,
    619,
    492,
    295,
    380,
    128,
    533,
    600,
    160,
    51,
    249,
    5,
    837,
    905,
    747,
    505,
    82,
    158,
    687,
    507,
    339,
    575,
    206,
    28,
    29,
    91,
    459,
    118,
    284,
    995,
    544,
    3,
    154,
    89,
    840,
    364,
    682,
    700,
    143,
    173,
    216,
    290,
    733,
    525,
    399,
    574,
    693,
    500,
    189,
    590,
    529,
    972,
    378,
    299,
    461,
    866,
    326,
    43,
    711,
    460,
    426,
    947,
    391,
    536,
    26,
    579,
    304,
    852,
    158,
    621,
    683,
    901,
    237,
    22,
    225,
    59,
    52,
    798,
    262,
    754,
    649,
    504,
    861,
    472,
    480,
    570,
    347,
    891,
    956,
    347,
    31,
    784,
    581,
    668,
    127,
    628,
    962,
    698,
    191,
    313,
    714,
    893,
  ],
  101
);
twoSum([3, 3], 6);

//第6版 降低内存失败
//执行用时：128 ms, 在所有 JavaScript 提交中击败了51.32%的用户
//内存消耗：39.3 MB, 在所有 JavaScript 提交中击败了17.79%的用户
var twoSum = function (nums, target) {
  let distance = [];
  for (let i = 0; i < nums.length; i++) {
    distance.push(target - nums[i]);
    for (let j = 0; j < distance.length - 1; j++) {
      if (nums[i] === target / 2) {
        if (distance[j] === target / 2) {
          return [j, i];
        }
      } else if (nums[i] === distance[j]) {
        return [j, i];
      }
    }
  }
};
twoSum([3, 3], 6);

//第7版 新思路，没用。。。
var twoSum = function (nums, target) {
  for (let i = 0; i < nums.length - 1; i++) {
    for (let j = i + 1; j < nums.length; j++) {
      if (nums[i] < target / 2 && nums[j] > target / 2) {
        if (nums[i] + nums[j] === target) {
          return [i, j];
        }
      } else if (nums[i] === target / 2 && nums[j] === target / 2) {
        return [i, j];
      } else if (nums[i] > target / 2 && nums[j] < target / 2) {
        if (nums[i] + nums[j] === target) {
          return [i, j];
        }
      }
    }
  }
};
twoSum([3, 3], 6);
twoSum([2, 9, 5, 8, 20, 6], 15);
twoSum([2, 5, 5, 11], 10);
//没用。。。
var twoSum = function (nums, target) {
  let half = target / 2;
  for (let i = 0; i < nums.length - 1; i++) {
    for (let j = i + 1; j < nums.length; j++) {
      if (nums[i] < half && nums[j] > half && nums[i] + nums[j] === target) {
        return [i, j];
      }
      if (nums[j] === half && nums[i] === half) {
        return [i, j];
      }
      if (nums[i] > half && nums[j] < half && nums[i] + nums[j] === target) {
        return [i, j];
      }
    }
  }
};
twoSum([3, 3], 6);
twoSum([2, 9, 5, 8, 20, 6], 15);
twoSum([2, 5, 5, 11], 10);

//优秀答案
var twoSum = function (nums, target) {
  let obj = {};
  let res = 0;
  for (let i = 0; i < nums.length; i++) {
    res = target - nums[i];
    if (obj[res] !== undefined) {
      return [obj[res], i];
    }
    obj[nums[i]] = i;
  }
};
//总结，思路是一样的，把差值求出来放进袋袋里，再看i原数组i后面的数在不在袋袋里
//只不过我用数组做袋袋，大神用对象做。。。
